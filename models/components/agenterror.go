// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// Metadata - Additional metadata about the error
type Metadata struct {
}

// Severity - The severity of the error
type Severity string

const (
	SeverityLow      Severity = "low"
	SeverityWarning  Severity = "warning"
	SeverityMinor    Severity = "minor"
	SeverityMajor    Severity = "major"
	SeverityCritical Severity = "critical"
	SeverityFatal    Severity = "fatal"
)

func (e Severity) ToPointer() *Severity {
	return &e
}
func (e *Severity) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "low":
		fallthrough
	case "warning":
		fallthrough
	case "minor":
		fallthrough
	case "major":
		fallthrough
	case "critical":
		fallthrough
	case "fatal":
		*e = Severity(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Severity: %v", v)
	}
}

type AgentError struct {
	// The error message
	Message string `json:"message"`
	// Additional metadata about the error
	Metadata *Metadata `json:"metadata,omitempty"`
	// The severity of the error
	Severity Severity `json:"severity"`
	// The agent that caused the error
	AgentID int64 `json:"agent_id"`
	// The task that caused the error, if any
	TaskID *int64 `json:"task_id,omitempty"`
}

func (o *AgentError) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

func (o *AgentError) GetMetadata() *Metadata {
	if o == nil {
		return nil
	}
	return o.Metadata
}

func (o *AgentError) GetSeverity() Severity {
	if o == nil {
		return Severity("")
	}
	return o.Severity
}

func (o *AgentError) GetAgentID() int64 {
	if o == nil {
		return 0
	}
	return o.AgentID
}

func (o *AgentError) GetTaskID() *int64 {
	if o == nil {
		return nil
	}
	return o.TaskID
}
